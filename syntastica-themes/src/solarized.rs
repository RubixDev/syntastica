//! The 'solarized' theme collection in this module was extracted from <https://github.com/overcache/NeoSolarized> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn dark() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(131, 148, 150), Some(Color::new(0, 43, 54)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("attribute.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(88, 110, 117), None, false, false, false, false)),
        ("comment.error".into(), Style::new(Color::new(255, 192, 185), None, false, false, false, false)),
        ("comment.note".into(), Style::new(Color::new(140, 248, 247), None, false, false, false, false)),
        ("comment.todo".into(), Style::new(Color::new(211, 54, 130), None, false, false, false, true)),
        ("comment.warning".into(), Style::new(Color::new(252, 224, 148), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("diff.delta".into(), Style::new(Color::new(140, 248, 247), None, false, false, false, false)),
        ("diff.minus".into(), Style::new(Color::new(255, 192, 185), None, false, false, false, false)),
        ("diff.plus".into(), Style::new(Color::new(179, 246, 192), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(140, 248, 247), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("ibl.indent.char.1".into(), Style::new(Color::new(101, 123, 131), None, false, false, false, true)),
        ("ibl.scope.char.1".into(), Style::new(Color::new(88, 110, 117), Some(Color::new(7, 54, 66)), false, false, false, false)),
        ("ibl.whitespace.char.1".into(), Style::new(Color::new(101, 123, 131), None, false, false, false, true)),
        ("keyword".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("markup".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("markup.heading".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, true)),
        ("markup.link".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("module".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("module.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("number.float".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(224, 226, 234), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(224, 226, 234), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(179, 246, 192), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.regexp".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.special.url".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("tag.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(224, 226, 234), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("variable.parameter.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(101, 123, 131), Some(Color::new(253, 246, 227)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("attribute.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(147, 161, 161), None, false, false, false, false)),
        ("comment.error".into(), Style::new(Color::new(89, 0, 8), None, false, false, false, false)),
        ("comment.note".into(), Style::new(Color::new(0, 115, 115), None, false, false, false, false)),
        ("comment.todo".into(), Style::new(Color::new(211, 54, 130), None, false, false, false, true)),
        ("comment.warning".into(), Style::new(Color::new(107, 83, 0), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("diff.delta".into(), Style::new(Color::new(0, 115, 115), None, false, false, false, false)),
        ("diff.minus".into(), Style::new(Color::new(89, 0, 8), None, false, false, false, false)),
        ("diff.plus".into(), Style::new(Color::new(0, 85, 35), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(0, 115, 115), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("ibl.indent.char.1".into(), Style::new(Color::new(131, 148, 150), None, false, false, false, true)),
        ("ibl.scope.char.1".into(), Style::new(Color::new(147, 161, 161), Some(Color::new(238, 232, 213)), false, false, false, false)),
        ("ibl.whitespace.char.1".into(), Style::new(Color::new(131, 148, 150), None, false, false, false, true)),
        ("keyword".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("markup".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("markup.heading".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, true)),
        ("markup.link".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("module".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("module.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("number.float".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(20, 22, 27), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(20, 22, 27), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(0, 85, 35), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.regexp".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.special.url".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("tag.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(20, 22, 27), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("variable.parameter.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
    ]))
}
