searchState.loadedDescShard("rsexpr", 0, "rsexpr\nA sequence of bytes not including whitespace, parens, and …\nA sequence of bytes not including whitespace, parens, and …\nA line comment, including the leading <code>;</code>\nA line comment, including the leading <code>;</code>\nThe input contains no S-expression\nContains the error value\nThe crate error type.\nThe input has an unexpected extra closing parenthesis\nThe input contains more than one S-expression\nA list of <code>Sexpr</code>s surrounded by brackets <code>[</code>, <code>]</code>\nA list of <code>OwnedSexpr</code>s surrounded by brackets <code>[</code>, <code>]</code>\nA list of <code>Sexpr</code>s surrounded by parentheses <code>(</code>, <code>)</code>\nA list of <code>OwnedSexpr</code>s surrounded by parentheses <code>(</code>, <code>)</code>\nThe input is missing a closing parenthesis\nContains the success value\nAn owned version of <code>Sexpr</code>. You can convert to and from …\nA thin wrapper around <code>Vec&lt;OwnedSexpr&gt;</code> with its own <code>Display</code> …\nA kind of parentheses. Used in <code>Error::MissingClosingParen</code> …\nThe default result type. The error variant is a vector of …\nRound parentheses: <code>()</code>\nA single node of the tree. The <code>Atom</code> and <code>String</code> variants …\nA thin wrapper around <code>Vec&lt;Sexpr&gt;</code> with its own <code>Display</code> …\nSquare brackets: <code>[]</code>\nA sequence of bytes surrounded by quotes <code>&quot;</code>\nA sequence of bytes surrounded by quotes <code>&quot;</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse a <code>Sexpr</code> from bytes. This fails if there is more than …\nParse multiple <code>Sexpr</code>s from bytes. To only parse a single …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new, empty list of <code>Sexpr</code>s\nCreate a new, empty list of <code>OwnedSexpr</code>s\nReturns the contained <code>Atom</code> value, consuming <code>self</code>.\nReturns the contained <code>Atom</code> value, consuming <code>self</code>.\nReturns the contained <code>Atom</code> value by reference.\nReturns the contained <code>Atom</code> value by reference.\nReturns the contained <code>Group</code> value, consuming <code>self</code>.\nReturns the contained <code>Group</code> value, consuming <code>self</code>.\nReturns the contained <code>Group</code> value by reference.\nReturns the contained <code>Group</code> value by reference.\nReturns the contained <code>List</code> value, consuming <code>self</code>.\nReturns the contained <code>List</code> value, consuming <code>self</code>.\nReturns the contained <code>List</code> value by reference.\nReturns the contained <code>List</code> value by reference.\nReturns the contained <code>String</code> value, consuming <code>self</code>.\nReturns the contained <code>String</code> value, consuming <code>self</code>.\nReturns the contained <code>String</code> value by reference.\nReturns the contained <code>String</code> value by reference.")