(function_declarator declarator: (identifier)@local.definition)(preproc_function_def name: (identifier)@local.definition)@local.scope (preproc_def name: (identifier)@local.definition)(pointer_declarator declarator: (identifier)@local.definition)(parameter_declaration declarator: (identifier)@local.definition)(init_declarator declarator: (identifier)@local.definition)(array_declarator declarator: (identifier)@local.definition)(declaration declarator: (identifier)@local.definition)(enum_specifier name: (_)@local.definition (enumerator_list (enumerator name: (identifier)@local.definition)))(field_declaration declarator: (field_identifier)@local.definition)(type_definition declarator: (type_identifier)@local.definition)(struct_specifier name: (type_identifier)@local.definition)(labeled_statement (statement_identifier)@local.definition)(identifier)@local.reference ((field_identifier)@local.reference (#set! reference.kind "field"))((type_identifier)@local.reference (#set! reference.kind "type"))(goto_statement (statement_identifier)@local.reference)[(for_statement)(if_statement)(while_statement)(translation_unit)(function_definition)(compound_statement)(struct_specifier)]@local.scope (variadic_parameter_declaration declarator: (variadic_declarator (identifier)@local.definition))(optional_parameter_declaration declarator: (identifier)@local.definition)(class_specifier)@local.scope (reference_declarator (identifier)@local.definition)(variadic_declarator (identifier)@local.definition)(struct_specifier name: (qualified_identifier name: (type_identifier)@local.definition))(class_specifier name: (type_identifier)@local.definition)(concept_definition name: (identifier)@local.definition)(class_specifier name: (qualified_identifier name: (type_identifier)@local.definition))(alias_declaration name: (type_identifier)@local.definition)(type_parameter_declaration (type_identifier)@local.definition)(template_declaration)@local.scope (namespace_definition name: (namespace_identifier)@local.definition body: (_)@local.scope)(namespace_definition name: (nested_namespace_specifier)@local.definition body: (_)@local.scope)((namespace_identifier)@local.reference (#set! reference.kind "namespace"))(template_function name: (identifier)@local.definition)@local.scope (template_method name: (field_identifier)@local.definition)@local.scope (function_declarator declarator: (qualified_identifier name: (identifier)@local.definition))@local.scope (field_declaration declarator: (function_declarator (field_identifier)@local.definition))(lambda_expression)@local.scope (try_statement body: (_)@local.scope)(catch_clause)@local.scope (requires_expression)@local.scope 