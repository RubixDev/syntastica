["," ";"]@punctuation.delimiter ["(" ")" "<<" ">>" "[" "]" "{" "}"]@punctuation.bracket "%" @punctuation.special (identifier)@variable ((identifier)@comment (#match? @comment "^_"))(comment)@comment (string)@string (alias)@module [(atom)(quoted_atom)(keyword)(quoted_keyword)]@string.special.symbol (interpolation ["#{" "}"]@string.special)(escape_sequence)@string.escape (integer)@number (float)@number.float [(char)(charlist)]@character (boolean)@boolean (nil)@constant.builtin (operator_identifier)@operator (unary_operator operator: _ @operator)(binary_operator operator: _ @operator)(binary_operator operator: "|>" right: (identifier)@function)(dot operator: _ @operator)(stab_clause operator: _ @operator)(call target: (identifier)@function.call)(call target: (dot left: [(atom)@type (_)]right: (identifier)@function.call)(arguments))(call target: ((identifier)@keyword.function (#match? @keyword.function "^(def|defdelegate|defexception|defguard|defguardp|defimpl|defmacro|defmacrop|defmodule|defn|defnp|defoverridable|defp|defprotocol|defstruct)$"))(arguments [(call (identifier)@function)(identifier)@function (binary_operator left: (call target: (identifier)@function)operator: "when")])?)(call target: ((identifier)@keyword (#match? @keyword "^(alias|case|catch|cond|else|for|if|import|quote|raise|receive|require|reraise|super|throw|try|unless|unquote|unquote_splicing|use|with)$")))((identifier)@constant.builtin (#match? @constant.builtin "^(__CALLER__|__DIR__|__ENV__|__MODULE__|__STACKTRACE__)$"))["after" "catch" "do" "end" "fn" "rescue" "when" "else"]@keyword ["and" "in" "not in" "not" "or"]@keyword.operator (unary_operator operator: "&" operand: [(integer)@operator (binary_operator left: [(call target: (dot left: (_)right: (identifier)@function))(identifier)@function]operator: "/" right: (integer)@operator)])(sigil "~" @string.special (sigil_name)@string.special @_sigil_name quoted_start: _ @string.special quoted_end: _ @string.special ((sigil_modifiers)@string.special)? (#not-match? @_sigil_name "^(s|S)$"))(sigil "~" @string (sigil_name)@string @_sigil_name quoted_start: _ @string (quoted_content)@string quoted_end: _ @string ((sigil_modifiers)@string)? (#match? @_sigil_name "^(s|S)$"))(unary_operator operator: "@" operand: [(identifier)(call target: (identifier))]@constant)@constant (unary_operator operator: "@" operand: (call target: ((identifier)@_identifier (#match? @_identifier "^(moduledoc|typedoc|shortdoc|doc)$"))@comment.documentation (arguments [(string)(boolean)(charlist)(sigil "~" @comment.documentation (sigil_name)@comment.documentation quoted_start: _ @comment.documentation (quoted_content)@comment.documentation quoted_end: _ @comment.documentation)]@comment.documentation)))@comment.documentation 